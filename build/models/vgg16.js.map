{"version":3,"sources":["../../src/models/vgg16.js"],"names":["tf","process","env","gpu","require","DefaultOptions","inputWidth","inputHeight","inputChannels","learningRate","optimizer","VGG16Model","options","outputSize","model","sequential","add","layers","zeroPadding2d","inputShape","padding","conv2d","filters","kernelSize","activation","maxPooling2d","poolSize","flatten","dense","units","dropout","rate","optimzer","Optimizer","compile","getOptimzer","loss","metrics","inputs","input","outputs","output"],"mappings":";;;;;;;AAUA;;;;;;;;;;AACA,IAAMA,EAAE,GAAIC,OAAO,CAACC,GAAR,CAAYC,GAAZ,KAAoB,IAArB,GAA6BC,OAAO,CAAC,2BAAD,CAApC,GAAoEA,OAAO,CAAC,uBAAD,CAAtF;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE,GADO;AAEnBC,EAAAA,WAAW,EAAE,GAFM;AAGnBC,EAAAA,aAAa,EAAE,CAHI;AAInBC,EAAAA,YAAY,EAAE,KAJK;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAAvB;;IAQMC,U;AACF,sBAAYC,OAAZ,EAAoB;AAAA;;AAChB,SAAKA,OAAL,GAAeA,OAAO,IAAIP,cAA1B;AACA,SAAKC,UAAL,GAAkBM,OAAO,CAACN,UAAR,IAAsBD,cAAc,CAACC,UAAvD;AACA,SAAKC,WAAL,GAAmBK,OAAO,CAACL,WAAR,IAAuBF,cAAc,CAACE,WAAzD;AACA,SAAKC,aAAL,GAAqBI,OAAO,CAACJ,aAAR,IAAyBH,cAAc,CAACG,aAA7D;AACA,SAAKC,YAAL,GAAoBG,OAAO,CAACH,YAAR,IAAwBJ,cAAc,CAACI,YAA3D;AACH;;;;6BAEQI,U,EAAW;AAEhB;AACA,WAAKC,KAAL,GAAad,EAAE,CAACe,UAAH,EAAb;AACA,WAAKD,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AACnCC,QAAAA,UAAU,EAAE,CAAC,KAAKZ,WAAN,EAAmB,KAAKD,UAAxB,EAAoC,KAAKE,aAAzC,CADuB;AAEnCY,QAAAA,OAAO,EAAE;AAF0B,OAAxB,CAAf;AAKA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,UAAU,EAAE,CAA3B;AAA8BC,QAAAA,UAAU,EAAE;AAA1C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,UAAU,EAAE,CAA3B;AAA8BC,QAAAA,UAAU,EAAE;AAA1C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUQ,YAAV,CAAuB;AAAEC,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAZ,OAAvB,CAAf;AAEA,WAAKZ,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUQ,YAAV,CAAuB;AAAEC,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAZ,OAAvB,CAAf;AAEA,WAAKZ,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUQ,YAAV,CAAuB;AAAEC,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAZ,OAAvB,CAAf;AAEA,WAAKZ,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUQ,YAAV,CAAuB;AAAEC,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAZ,OAAvB,CAAf;AAEA,WAAKZ,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUC,aAAV,CAAwB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAf;AACA,WAAKN,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUI,MAAV,CAAiB;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAjB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUQ,YAAV,CAAuB;AAAEC,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAZ,OAAvB,CAAf,EA1CgB,CA4ChB;;AACA,WAAKZ,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUU,OAAV,EAAf;AACA,WAAKb,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUW,KAAV,CAAgB;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeL,QAAAA,UAAU,EAAE;AAA3B,OAAhB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUa,OAAV,CAAkB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAlB,CAAf;AACA,WAAKjB,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUW,KAAV,CAAgB;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeL,QAAAA,UAAU,EAAE;AAA3B,OAAhB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUa,OAAV,CAAkB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAlB,CAAf;AACA,WAAKjB,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUW,KAAV,CAAgB;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeL,QAAAA,UAAU,EAAE;AAA3B,OAAhB,CAAf;AACA,WAAKV,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUa,OAAV,CAAkB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAlB,CAAf;AACA,WAAKjB,KAAL,CAAWE,GAAX,CAAehB,EAAE,CAACiB,MAAH,CAAUW,KAAV,CAAgB;AAAEC,QAAAA,KAAK,EAAEhB,UAAT;AAAqBW,QAAAA,UAAU,EAAE;AAAjC,OAAhB,CAAf;AAEA,UAAIQ,QAAQ,GAAG,IAAIC,qBAAJ,CAAc,KAAKrB,OAAnB,CAAf;AAEA,WAAKE,KAAL,CAAWoB,OAAX,CAAmB;AACfxB,QAAAA,SAAS,EAAEsB,QAAQ,CAACG,WAAT,EADI;AAEfC,QAAAA,IAAI,EAAE,yBAFS;AAGfC,QAAAA,OAAO,EAAE,CAAC,UAAD;AAHM,OAAnB;AAMA,aAAOrC,EAAE,CAACc,KAAH,CAAS;AACZwB,QAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWG,MAAX,CAAkB,CAAlB,EAAqBsB,KADjB;AAEZC,QAAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWG,MAAX,CAAkB,CAAlB,EAAqBwB;AAFlB,OAAT,CAAP;AAIH;;;;;;eAGU9B,U","sourcesContent":["/**\r\n * VGG16 Model\r\n * \r\n * @see https://keras.io/api/applications/vgg/\r\n * @see https://github.com/machrisaa/tensorflow-vgg/blob/master/vgg16.py\r\n * @see https://gist.github.com/baraldilorenzo/07d7802847aaad0a35d3\r\n * @see https://github.com/tensorflow/tfjs/issues/898\r\n * @see https://neurohive.io/en/popular-networks/vgg16/\r\n */\r\n\r\nimport Optimizer from \"../Optimizer\";\r\nconst tf = (process.env.gpu === true) ? require(\"@tensorflow/tfjs-node-gpu\") : require(\"@tensorflow/tfjs-node\");\r\n\r\nconst DefaultOptions = {\r\n    inputWidth: 224,\r\n    inputHeight: 224,\r\n    inputChannels: 3,\r\n    learningRate: 0.009,\r\n    optimizer: \"sgd\"\r\n};\r\n\r\nclass VGG16Model {\r\n    constructor(options){\r\n        this.options = options || DefaultOptions;\r\n        this.inputWidth = options.inputWidth || DefaultOptions.inputWidth;\r\n        this.inputHeight = options.inputHeight || DefaultOptions.inputHeight;\r\n        this.inputChannels = options.inputChannels || DefaultOptions.inputChannels;\r\n        this.learningRate = options.learningRate || DefaultOptions.learningRate;\r\n    }\r\n\r\n    generate(outputSize){\r\n\r\n        //Input\r\n        this.model = tf.sequential();\r\n        this.model.add(tf.layers.zeroPadding2d({ \r\n            inputShape: [this.inputHeight, this.inputWidth, this.inputChannels],\r\n            padding: 1 \r\n        }));\r\n\r\n        this.model.add(tf.layers.conv2d({ filters: 64, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 64, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.maxPooling2d({ poolSize: [2, 2] }));\r\n\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 128, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 128, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.maxPooling2d({ poolSize: [2, 2] }));\r\n\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 256, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 256, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 256, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.maxPooling2d({ poolSize: [2, 2] }));\r\n\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 512, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 512, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 512, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.maxPooling2d({ poolSize: [2, 2] }));\r\n\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 512, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 512, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.zeroPadding2d({ padding: 1 }));\r\n        this.model.add(tf.layers.conv2d({ filters: 512, kernelSize: 3, activation: \"relu\" }));\r\n        this.model.add(tf.layers.maxPooling2d({ poolSize: [2, 2] }));\r\n\r\n        //Output\r\n        this.model.add(tf.layers.flatten());\r\n        this.model.add(tf.layers.dense({ units: 4096, activation: \"relu\" }));\r\n        this.model.add(tf.layers.dropout({ rate: 0.5 }));\r\n        this.model.add(tf.layers.dense({ units: 4096, activation: \"relu\" }));\r\n        this.model.add(tf.layers.dropout({ rate: 0.5 }));\r\n        this.model.add(tf.layers.dense({ units: 1000, activation: \"relu\" }));\r\n        this.model.add(tf.layers.dropout({ rate: 0.5 }));\r\n        this.model.add(tf.layers.dense({ units: outputSize, activation: \"softmax\"}));\r\n\r\n        let optimzer = new Optimizer(this.options);\r\n        \r\n        this.model.compile({\r\n            optimizer: optimzer.getOptimzer(),\r\n            loss: \"categoricalCrossentropy\",\r\n            metrics: [\"accuracy\"]\r\n        });\r\n\r\n        return tf.model({\r\n            inputs: this.model.layers[0].input, \r\n            outputs: this.model.layers[1].output\r\n        });\r\n    }\r\n}\r\n\r\nexport default VGG16Model;"],"file":"vgg16.js"}